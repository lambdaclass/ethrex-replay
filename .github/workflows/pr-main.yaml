name: Replay
on:
  # For now on every push so that i test it
  push:
    branches: ["**"]
  # pull_request:
  #   branches: ["**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    strategy:
      fail-fast: false
      matrix:
        include:
          - label: no-feature
            features: ""
            no_default: true
          - label: l2
            features: "l2"
            no_default: true
          - label: l2+sp1
            features: "l2,sp1"
            no_default: true
          - label: l2+risc0
            features: "l2,risc0"
            no_default: true
          - label: sp1
            features: "sp1"
            no_default: true
          - label: risc0
            features: "risc0"
            no_default: true
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Rust Environment
        uses: ./.github/actions/setup-rust

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: cargo fmt --check --all (${{ matrix.label }})
        run: cargo fmt --check --all

      - name: cargo check (${{ matrix.label }})
        shell: bash
        env:
          FEATURE_ARGS: ${{ matrix.features }}
          NO_DEFAULT_FEATURES: ${{ matrix.no_default }}
        run: |
          set -euxo pipefail
          args=(--release)
          if [ "${NO_DEFAULT_FEATURES}" = "true" ]; then
            args+=("--no-default-features")
          fi
          if [ -n "${FEATURE_ARGS}" ]; then
            args+=("--features" "${FEATURE_ARGS}")
          fi
          cargo check "${args[@]}"

      - name: cargo clippy (${{ matrix.label }})
        shell: bash
        env:
          FEATURE_ARGS: ${{ matrix.features }}
          NO_DEFAULT_FEATURES: ${{ matrix.no_default }}
        run: |
          set -euxo pipefail
          args=(--release)
          if [ "${NO_DEFAULT_FEATURES}" = "true" ]; then
            args+=("--no-default-features")
          fi
          if [ -n "${FEATURE_ARGS}" ]; then
            args+=("--features" "${FEATURE_ARGS}")
          fi
          cargo clippy "${args[@]}" -- -D warnings

  test:
    runs-on: ubuntu-latest
    name: Execute an L1 block with ${{ matrix.backend }} backend
    strategy:
      fail-fast: true
      matrix:
        backend: ["sp1", "risc0"]
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          large-packages: false

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Rust Environment
        uses: ./.github/actions/setup-rust

      - name: RISC-V Risc0 toolchain install
        if: matrix.backend == 'risc0'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # should be able to specify a version for `rzup install rust` (toolchain version)
        # but it throws a "error decoding response body" in that case
        run: |
          curl -L https://risczero.com/install | bash
          ~/.risc0/bin/rzup install cargo-risczero 3.0.3
          ~/.risc0/bin/rzup install risc0-groth16
          ~/.risc0/bin/rzup install rust
      - name: RISC-V SP1 toolchain install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.backend == 'sp1'
        run: |
          curl -L https://sp1.succinct.xyz | bash
          ~/.sp1/bin/sp1up --version 5.0.8

      - name: Build Risc0
        if: matrix.backend == 'risc0'
        run: |
          cargo b -r --no-default-features --features "${{ matrix.backend }}"

      - name: Build SP1
        if: matrix.backend == 'sp1'
        run: |
          cargo b -r --features "${{ matrix.backend }}"

      - name: Run
        env:
          # TODO(): use RPC
          # RPC_URL: $${{ secrets.ETHREX_L2_RPC_URL }}
          RPC_URL: "http://45.76.185.153:8545"
        run: |
          install -D caches/cache_hoodi_1265656.json replay_cache/cache_hoodi_1265656.json
          make execute-${{ matrix.backend }}-ci BLOCK_NUMBER=1265656 NETWORK=hoodi

  run-replay-no-backend:
    # "Test" is a required check, don't change the name
    name: Test
    # It is not working properly, skipping for now
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Rust Environment
        uses: ./.github/actions/setup-rust

      - name: Build Replay
        run: |
          cargo b -r

      - name: Execute Hoodi block with Replay
        env:
          # TODO(): use RPC
          # RPC_URL: $${{ secrets.ETHREX_L2_RPC_URL }}
          RPC_URL: "http://45.76.185.153:8545"
        run: |
          # IMPORTANT: If you change the cache block number, remember to also change it in `main_prover_l1.yaml`
          install -D caches/cache_hoodi_1265656.json replay_cache/cache_hoodi_1265656.json
          make execute BLOCK_NUMBER=1265656 NETWORK=hoodi
